import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

void main()=> runApp(MyApp());

class MyApp extends StatelessWidget{
  Widget build(BuildContext context){
    return MaterialApp(
      home: ListTrial(),
    );
  }
}

class ListTrial extends StatefulWidget{
  _ListTrial createState() => _ListTrial();
}

class _ListTrial extends State<ListTrial>{
  List<String> categories =['Food','Desserts','Drintks'];
  int? currentCategory=0;

  Map<int,List<String>> items={
    0:['Pizza', 'Burger', 'Pasta', 'Sandwich'],
    1:['Ice Cream', 'Gulab Jamun', 'Brownie', 'Donut'],
    2:['Soda', 'Coffee', 'Tea', 'Juice']
  };

  List<String>? currentItems=[];

  Widget build(BuildContext context ){
    currentItems= currentCategory == null ? items[0] : items[currentCategory];

    return Scaffold(
      body: Center(
        child:Column(
          mainAxisAlignment: MainAxisAlignment.start,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            // Horizontal Category List
            Container(
              width: double.infinity,
              margin: EdgeInsets.only(top: 100,left: 0),
              color: Colors.lightGreen,
              height: 60,
              child: ListView.builder(
                scrollDirection:Axis.horizontal,
                physics:BouncingScrollPhysics(),
                itemCount: categories.length,
                itemBuilder:(context,index){
                  var isSelect = currentCategory == index;
                  return Container(
                    height:double.infinity,
                    padding: EdgeInsets.all(5),
                    margin:EdgeInsets.symmetric(horizontal: 30),
                    child: GestureDetector(
                      child: Card(
                        color: isSelect ? Colors.red : Colors.white,
                        child: Center(child: Text(categories[index])),
                      ),
                      onTap: ()=>setState(() {
                        currentCategory=index;
                      }),
                    ),
                  );
                },
              )
            ),

            // Grid of items
            Expanded(
              child: GridView.builder(
                gridDelegate:SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 2,
                  crossAxisSpacing: 20,
                  mainAxisSpacing: 20
                ),
                itemCount: currentItems!.length,
                itemBuilder:(context,index){
                  return Container(
                    child: Center(child: Text(currentItems![index])),
                  );
                }
              )
            )
          ],
        ),
      )
    );
  }
}
